<!DOCTYPE html>
<html lang="ru" data-theme="light">
  <head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <meta http-equiv="Content-Language" content="ru" />
    <meta http-equiv="X-UA-Compatible" content="IE=11" />
    <meta content="Перевод на русский: Сергей Леонов (aka Leserg)" name="description" />
    <title>Программирование: Дополнительные страницы мастера</title>
    <link rel="stylesheet" type="text/css" href="../css/styles.css" />
    <link rel="stylesheet" type="text/css" href="../css/shared.css" />
    <script type="text/javascript" src="../js/topic.js"></script>
    <script type="text/javascript" src="../js/jquery.js"></script>
    <script type="text/javascript" src="../js/highlight.js"></script>
    <script type="text/javascript">
      $(document).ready(function(){highlight();});
    </script>
  </head>
  <body>
    <h1 class="topicheading">Программирование: Дополнительные
      страницы мастера</h1>
    <div class="topicbody">
      <p>Pascal-сценарий позволяет добавить в мастер установки
        дополнительные страницы. Это могут быть как "встроенные" страницы,
        предназначенные для создания запросов общего характера, так и полностью
        настраиваемые страницы с элементами управления по вашему выбору.</p>
      <p>Чтобы использовать дополнительные страницы мастера, их
        сначала необходимо создать внутри функции события <tt>InitializeWizard</tt>.
        Можно использовать встроенные страницы, созданные функциями вида <tt>CreateInput...Page</tt>
        и <tt>CreateOutput...Page</tt>, или "пустые" страницы, созданные
        функцией <tt>CreateCustomPage</tt>. Обратитесь к разделу справки "<a href="topic_scriptfunctions.htm">Справочник
          поддерживаемых функций</a>" для ознакомления со всеми функциями <tt>Create...Page</tt>.</p>
      <p>После создания каждой страницы к ней добавляются
        элементы управления либо путём вызова специальных методов, используемых
        встроенными страницами, либо путём создания элементов управления на
        странице вручную.</p>
      <p>Большинство функций <tt>Create...Page</tt> в качестве
        первого аргумента принимают "ID страницы" (идентификатор), определяющий
        существующую страницу, после которой должна быть размещена вновь
        созданная страница. Существует несколько способов определения
        идентификатора существующей страницы. Создаваемые страницы имеют
        свойство <tt>ID</tt>, который и определяет идентификатор страницы.
        Встроенные страницы мастера имеют предопределённые идентификаторы.
        Например, страница мастера "<i>Приветствие</i>" имеет идентификатор <tt>wpWelcome</tt>.
        С другими предопределёнными идентификаторами страниц можно ознакомиться
        в разделе справки "<a href="topic_scriptfunctions.htm">Справочник
          поддерживаемых функций</a>".</p>
      <p>После создания дополнительных страниц программа
        установки покажет и обработает их так же, как если бы они были
        стандартными страницами мастера. Сюда также относится вызов всех
        связанных со страницей функций, таких как <tt>NextButtonClick</tt> и <tt>ShouldSkipPage</tt>.</p>
      <p>В любой момент во время установки можно получить
        значения, введённые пользователем, либо с помощью специальных свойств
        встроенных страниц, либо с помощью свойств элементов управления,
        созданных вручную.</p>
      <p>Пример использования встроенных страниц мастера и
        функций событий можно увидеть в файле сценария "<i>CodeDlg.iss</i>",
        который находится в папке "Examples" по месту установки Inno Setup.
        Создание пользовательских страниц с элементами управления и их
        использование показан в примере "<i>CodeClasses.iss</i>".</p>
    </div>
  <script type="text/javascript" src="../js/theme_selector.js"></script>
  </body>
</html>
