<!DOCTYPE html>
<html lang="ru">
  <head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <meta http-equiv="Content-Language" content="ru" />
    <meta http-equiv="X-UA-Compatible" content="IE=11" />
    <meta content="Перевод на русский: Сергей Леонов (aka Leserg)" name="description" />
    <title>Препроцессор Inno Setup: Область видимости переменных</title>
    <link rel="stylesheet" type="text/css" href="../css/styles.css" />
    <script type="text/javascript" src="../js/topic.js"></script>
    <script type="text/javascript" src="../js/jquery.js"></script>
    <script type="text/javascript" src="../js/highlight.js"></script>
    <script type="text/javascript">
      $(document).ready(function(){highlight();});
    </script>
  </head>
  <body>
    <h1 class="topicheading">Препроцессор Inno Setup: Область видимости
      переменных</h1>
    <div class="topicbody">
      <p><b>Область видимости</b> обозначает область программы, в пределах
        которой <i>идентификатор</i> (имя) некоторой <i>переменной</i>
        продолжает быть связанным с этой переменной и возвращать её значение. За
        пределами области видимости тот же самый идентификатор может быть связан
        с другой переменной, либо быть свободным (не связанным ни с какой из
        них). В сценариях <i>Inno Setup</i> переменные могут быть определены в
        одной из трех специфических областей видимости: <i>общедоступные</i>
        (<tt>public</tt>), <i>защищенные</i>
        (<tt>protected</tt>) или <i>закрытые</i>
        (<tt>private</tt>). При объявлении такой
        переменной, её область видимости указывается ключевым словом после
        директивы <tt class="nill"><a href="topic_define.htm">define</a></tt>.
        Посмотрите на следующие примеры:</p>
      <div class="examplebox">
        <pre class="hl"><span class="hl slc">; Объявляем общедоступную переменную с именем MyVar и присваиваем ей значение 12</span>
<span class="hl kwf">#define</span> <span class="hl kwd">public</span> MyVar <span
class="hl num">12</span>

<span class="hl slc">; Объявляем защищенную переменную с именем MyVar и присваиваем ей значение 13</span>
<span class="hl kwf">#define</span> <span class="hl kwd">protected</span> MyVar <span
class="hl num">13</span>

<span class="hl slc">; Объявляем закрытую переменную с именем MyVar и присваиваем ей значение 14</span>
<span class="hl kwf">#define</span> <span class="hl kwd">private</span> MyVar <span
class="hl num">14</span>
</pre> </div>
      <p>В приведенном выше примере, ни одно из последующих объявлений
        переменной не переопределяет предыдущее, хотя используется один и тот же
        идентификатор (<tt>MyVar</tt>). Причиной этого является различная
        область видимости заявленная для переменных.</p>
      <p><b>Общедоступные</b> (<i>public</i>) — это простые переменные, которые
        доступны из любого места после того, как были объявлены.</p>
      <p><b>Защищенные</b> (<i>protected</i>) — это переменные, которые доступны
        только в том файле, в котором они были объявлены, а также во всех
        файлах, подключенных при помощи директивы <tt class="nill"><a href="topic_include.htm"
           >include</a></tt> или <tt class="nill"><a href="topic_file.htm">file</a></tt>.
        В большинстве случаев защищенные переменные можно воспринимать как
        общедоступные, определение которых автоматически отменяется после
        завершения работы файла.</p>
      <p><b>Закрытые</b> (<i>private</i>) — это переменные, которые доступны
        только в том файле, в котором были объявлены. Область их действия не
        распространяется на другие файлы, будь то подключенные или родительские
        (<i>parent</i>) файлы.</p>
      <p>Поскольку <b>ISPP</b> не содержит семантики помещения или извлечения
        значения переменной, то указание области видимости может быть очень
        полезным.</p>
      <p>Обратите внимание, что нельзя обращаться к переменной с заданной
        областью видимости из выражений. С учётом вышеприведенного примера, если
        <tt>MyVar</tt> заявлена в выражении объявленного файла, то её
        идентификатор относится к закрытой (<i>private</i>) области видимости
        переменной <tt>MyVar</tt>. Если она заявлена в подключенном файле, то
        её идентификатор относится к защищенной (<i>protected</i>) области
        видимости переменной <tt>MyVar</tt>. Если же она заявлена в одном из
        файлов подключенных через стек (т.е. один из файлов подключенного
        директивой <tt class="nill"><a href="topic_include.htm">include</a></tt>,
        которая в процессе обработки приводит к объявленному файлу), то её
        идентификатор относится к общедоступной (<i>public</i>) области
        видимости переменной <tt>MyVar</tt>.</p>
      <p>Таким образом, если в показанном примере поменять местами две последние
        записи объявления переменных, то закрытая (<i>private</i>) переменная <tt>MyVar</tt>
        станет недоступной (до момента отмены объявления защищенной переменной)
        потому, что защищенная (<i>protected</i>) переменная объявлена после
        него и имеет больший приоритет. Но это не сможет отменить копию закрытой
        (<i>private</i>) переменной.</p>
      <p>В каждом файле можно задать область видимости переменных по умолчанию,
        которая будет использована для тех переменных, у которых она явно не
        указана. Это делается при помощи директивы <tt class="nill"><a href="topic_define.htm"
           >define</a></tt>, например:</p>
      <div class="examplebox">
        <pre class="hl"><span class="hl kwf">#define</span> <span class="hl kwd">protected</span>
</pre> </div>
      <p>Здесь мы объявили защищенную (<i>protected</i>) область видимости по
        умолчанию.</p>
      <p>Установленная область видимости переменных не распространяется на
        выражения и предназначена только для установки области видимости для тех
        переменных, у которых она явно не указана. Если область видимости по
        умолчанию не установлена, то по умолчанию предполагается общедоступная (<i>public</i>).
        Установка области видимости не распространяется на подключенные или
        родительские файлы.</p>
      <p>В выражениях пользовательских функций старайтесь не использовать
        идентификаторы с более низкой областью видимости, чем вне функции. Это
        может стать причиной появления ошибок "Undeclared identifier"
        (неизвестный идентификатор), если функция будет вызвана из другого
        файла.</p>
      <p>При объявлении переменных рекомендуется использовать соответствующую
        область видимости, что избежать проблем с неожиданным переопределением
        переменной (например, при подключении файла стороннего разработчика).
        Если в подключенных файлах переменная не используется, объявите её как
        закрытую (<i>private</i>). Если используется, в родительском файле нет,
        объявите её как защищенную (<i>protected</i>). В остальных случаях
        используйте общедоступные (<i>public</i>). Если вы не уверены, то в
        большинстве случаев можете указывать защищенную (<i>protected</i>)
        область видимости.</p>
    </div>
  </body>
</html>
